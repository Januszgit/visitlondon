@mixin phone {
  @media only screen and (min-width: map-get($breakpoints, 'phone')) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: map-get($breakpoints, 'tablet')) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: map-get($breakpoints, 'desktop')) {
    @content;
  }
}

@mixin clearfix {
  // zoom:1;
  &::before,
  &::after {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }
}

@mixin border-box {
  // -webkit-box-sizing: border-box;
  // -moz-box-sizing: border-box;
  // -ms-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin border-radius($border) {
  border-radius: $border;
}

@mixin bg-mixin($image, $height: 100vh, $bg-position: center center) {
  background: linear-gradient(to bottom, $bg-gradient-start-clr, $bg-gradient-stop-clr), url($image);
  background-position: $bg-position;
  background-repeat: no-repeat;
  background-size: cover;
  height: $height;
}

@mixin button($bg-color, $hover-color, $color) {
  @include border-radius(5px);
  background-color: $bg-color;
  color: $color;
  display: block;
  font-size: $btn-font-size;
  font-weight: $btn-font-weight;
  margin-top: 20px;
  padding: 10px 30px;
  text-decoration: none;
  text-transform: $text-transform;
  transition: all .3s ease;
  @include tablet {
    display: inline-block;
  }

  &:hover {
    background-color: $hover-color;
  }
}

@mixin grid-images ($qty, $margin) {
  // $my-width: (100 - (($qty - 1) * $margin)) / ($qty * 100);
  width: percentage((100 - (($qty - 1) * $margin)) / ($qty * 100));

  &:nth-child(n) {
    //margin-bottom: $margin * 1px;
    //margin-right: $margin * 1px;
    margin-bottom: percentage($margin/100);
    margin-right: percentage($margin/100);
  }

  &:nth-child(#{$qty}n) {
    //margin-bottom: 0;
    margin-right: 0;
  }
}

// @mixin clear-layout {
//   #{if(&, "&", "*")}::after {
//     @content;
//   }
//   #{if(&, "&", "*")}::before {
//     @content;
//   }
// }
